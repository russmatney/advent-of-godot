{:paths ["bb"]
 :tasks
 {:requires ([clojure.string :as string])
  :init
  (do
    (defn shell-and-log
      ([x] (shell-and-log {} x))
      ([opts x]
       (println x)
       (when (seq opts) (println opts))
       (shell opts x))))

  test (shell-and-log
         ;; {:extra-env {"GODOT_BIN" godot-bin}}
         (str "./addons/gdUnit4/runtest.sh -c -a test"))

  test-match (let [arg (some-> *command-line-args* first)]
               (shell-and-log
                 ;; {:extra-env {"GODOT_BIN" godot-bin}}
                 (str "./addons/gdUnit4/runtest.sh -c -a " arg)))

  download-input
  (let [args *command-line-args*]
    (if (count args)
      (apply tasks/create-input args)
      (println "Missing download args")))}}
